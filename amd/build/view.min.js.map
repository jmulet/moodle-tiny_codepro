{"version":3,"file":"view.min.js","sources":["../src/view.js"],"sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable max-len */\n/* eslint-disable no-console */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny CodePro plugin.\n *\n * @module      tiny_codepro/plugin\n * @copyright   2023 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {displayDialogue, requireCm6Pro} from \"./ui\";\nimport {getPref, setPref} from \"./preferences\";\nimport {isAutoFormatHTML, getDefaultUI, isSyncCaret} from \"./options\";\nimport {blackboard} from \"./commands\";\n/**\n * @param {*} editor\n * @param {string[]} translations\n * @returns\n */\nexport function createView(editor, translations) {\n    const [opendialogStr, fullscreenStr, themesStr, linewrapStr, prettifyStr] = translations;\n\n    editor.ui.registry.addIcon('tiny_codepro-tinymce', '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 940.6 959.5\"><path d=\"M621.6 0c159.9.9 317.9 133.8 317.9 327.5 0 0 1 49.2 1.1 108.8v24.9c0 11.2-.1 22.5-.2 33.8l-.2 16.9c-.7 47.6-2.4 91.9-5.8 114.9-22.2 148-132.7 250.2-285 276.2-137.3 26.8-218.7 42.3-245 47.5-11.3 2.4-61.1 9-82.7 9C154.3 959.5 2.4 834.1 0 632v-33.3l.1-5.7v-12.4c0-21.8.1-48.5.2-76l.1-16.5c.2-52.5.7-104.9 1.5-129C7.6 211.6 109.6 92.4 303.8 54.2L551.1 6.1C573.7 1.9 598.6 0 621.6 0z\" fill=\"#0c132c\"/><path d=\"M733.5 538.7l-150.4 29.2v147l-376.2 73V421.2l150.4-29.1v219.6l225.8-43.8V348.3l-225.8 43.8V245l376.2-73z\" fill=\"#fff\" fill-rule=\"evenodd\"/></svg>');\n    editor.ui.registry.addIcon('tiny_codepro-sun', '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"21\" width=\"21\" viewBox=\"0 0 512 512\"><path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7 .2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"/></svg>');\n    editor.ui.registry.addIcon('tiny_codepro-moon', '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"21\" width=\"21\" viewBox=\"0 0 512 512\"><path d=\"M283.2 512c79 0 151.1-35.9 198.9-94.8 7.1-8.7-.6-21.4-11.6-19.4-124.2 23.7-238.3-71.6-238.3-197 0-72.2 38.7-138.6 101.5-174.4 9.7-5.5 7.3-20.2-3.8-22.2A258.2 258.2 0 0 0 283.2 0c-141.3 0-256 114.5-256 256 0 141.3 114.5 256 256 256z\"/></svg></svg>');\n    editor.ui.registry.addIcon('tiny_codepro-magic', '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"21\" width=\"21\" viewBox=\"0 0 512 512\"><path d=\"M224 96l16-32 32-16-32-16-16-32-16 32-32 16 32 16 16 32zM80 160l26.7-53.3L160 80l-53.3-26.7L80 0 53.3 53.3 0 80l53.3 26.7L80 160zm352 128l-26.7 53.3L352 368l53.3 26.7L432 448l26.7-53.3L512 368l-53.3-26.7L432 288zm70.6-193.8L417.8 9.4C411.5 3.1 403.3 0 395.2 0c-8.2 0-16.4 3.1-22.6 9.4L9.4 372.5c-12.5 12.5-12.5 32.8 0 45.3l84.9 84.9c6.3 6.3 14.4 9.4 22.6 9.4 8.2 0 16.4-3.1 22.6-9.4l363.1-363.2c12.5-12.5 12.5-32.8 0-45.2zM359.5 203.5l-50.9-50.9 86.6-86.6 50.9 50.9-86.6 86.6z\"/></svg>');\n    editor.ui.registry.addIcon('tiny_codepro-exchange', '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"21\" width=\"21\" viewBox=\"0 0 512 512\"><path d=\"M0 168v-16c0-13.3 10.7-24 24-24h360V80c0-21.4 25.9-32 41-17l80 80c9.4 9.4 9.4 24.6 0 33.9l-80 80C410 272 384 261.5 384 240v-48H24c-13.3 0-24-10.7-24-24zm488 152H128v-48c0-21.3-25.9-32.1-41-17l-80 80c-9.4 9.4-9.4 24.6 0 33.9l80 80C102.1 464 128 453.4 128 432v-48h360c13.3 0 24-10.7 24-24v-16c0-13.3-10.7-24-24-24z\"/></svg>');\n    editor.ui.registry.addIcon('tiny_codepro-arrowright', '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"21\" width=\"21\" viewBox=\"0 0 512 512\"><path d=\"M313.9 216H12c-6.6 0-12 5.4-12 12v56c0 6.6 5.4 12 12 12h301.9v46.1c0 21.4 25.9 32.1 41 17l86.1-86.1c9.4-9.4 9.4-24.6 0-33.9l-86.1-86.1c-15.1-15.1-41-4.4-41 17V216z\"/></svg>');\n    editor.ui.registry.addIcon('tiny_codepro-eye', '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"21\" width=\"21\" viewBox=\"0 0 560 512\"><path d=\"M572.5 241.4C518.3 135.6 410.9 64 288 64S57.7 135.6 3.5 241.4a32.4 32.4 0 0 0 0 29.2C57.7 376.4 165.1 448 288 448s230.3-71.6 284.5-177.4a32.4 32.4 0 0 0 0-29.2zM288 400a144 144 0 1 1 144-144 143.9 143.9 0 0 1 -144 144zm0-240a95.3 95.3 0 0 0 -25.3 3.8 47.9 47.9 0 0 1 -66.9 66.9A95.8 95.8 0 1 0 288 160z\"/></svg>');\n\n    let codeEditorInstance;\n\n    const saveAction = () => {\n        if (codeEditorInstance) {\n            const codeContent = codeEditorInstance.getValue();\n            console.log(\"Autosave\");\n            editor.setContent(codeContent);\n        }\n    };\n\n\n    const buttons = [\n        {\n            type: 'button',\n            text: ' ',\n            icon: 'fullscreen',\n            tooltip: fullscreenStr,\n            onAction: () => {\n                editor.execCommand('mceFullScreen');\n            }\n        },\n        {\n            type: 'togglebutton',\n            text: ' ',\n            icon: 'tiny_codepro-sun',\n            tooltip: themesStr,\n            onAction: (api) => {\n                if (!codeEditorInstance) {\n                    return;\n                }\n                const isDark = api.isActive();\n                api.setActive(!isDark);\n                api.setIcon(isDark ? 'tiny_codepro-sun' : 'tiny_codepro-moon');\n                const theme = isDark ? 'light' : 'dark';\n                codeEditorInstance.setTheme(theme);\n                setPref(\"theme\", theme, true);\n            },\n            onSetup: (api) => {\n                // According to user preferences set the correct theme on startup\n                const currentTheme = getPref(\"theme\", \"light\");\n                const isDark = currentTheme === \"dark\";\n                api.setActive(isDark);\n                api.setIcon(isDark ? 'tiny_codepro-sun' : 'tiny_codepro-moon');\n            }\n        },\n        // Disabling line wrapping is problematic in view mode\n        {\n            type: 'togglebutton',\n            text: ' ',\n            icon: 'tiny_codepro-exchange',\n            tooltip: linewrapStr,\n            onAction: (api) => {\n                if (!codeEditorInstance) {\n                    return;\n                }\n                const isWrap = api.isActive();\n                api.setActive(isWrap);\n                api.setIcon(isWrap ? 'tiny_codepro-exchange' : 'tiny_codepro-arrowright');\n                codeEditorInstance.setLineWrapping(isWrap);\n                setPref(\"wrap\", isWrap + '', true);\n            },\n            onSetup: (api) => {\n                // According to user preferences set the correct wrap setting\n                const isWrap = getPref(\"wrap\", \"false\") === \"true\";\n                api.setActive(isWrap);\n                api.setIcon(isWrap ? 'tiny_codepro-arrowright' : 'tiny_codepro-exchange');\n            }\n        },\n        {\n            type: 'button',\n            text: ' ',\n            icon: 'tiny_codepro-magic',\n            tooltip: prettifyStr,\n            onAction: () => {\n                codeEditorInstance?.prettify();\n            }\n        },\n        {\n            type: 'button',\n            text: ' tinyMCE',\n            icon: 'tiny_codepro-tinymce',\n            buttonType: 'primary',\n            onAction: () => {\n                saveAction();\n                editor.execCommand('ToggleView', false, 'codepro');\n            }\n        },\n    ];\n\n    // If user is allowed to switch views\n    const defaultUI = getDefaultUI(editor) ?? 'dialog';\n    const canUserSwitchUI = defaultUI.startsWith('user:');\n    if (canUserSwitchUI) {\n        buttons.unshift({\n            type: 'button',\n            text: ' ',\n            icon: 'tiny_codepro-eye',\n            tooltip: opendialogStr,\n            onAction: () => {\n                blackboard.state = codeEditorInstance.getState();\n                editor.execCommand('ToggleView', false, 'codepro');\n                // Now handleAction as dialog\n                displayDialogue(editor);\n                setPref(\"view\", 'dialog', true);\n            }\n        });\n    }\n\n    return {\n        buttons,\n        onShow: async(api) => {\n            if (!codeEditorInstance) {\n                const container = api.getContainer();\n                container.classList.add('tiny_codepro-view__pane');\n                const shadowRoot = container.attachShadow({mode: \"open\"});\n                const cmElement = document.createElement(\"DIV\");\n                cmElement.classList.add('tiny_codepro-container');\n\n                const shadowStyles = document.createElement('style');\n                shadowStyles.textContent = `\n                .tiny_codepro-container {\n                    height: 100%;\n                }\n                .cm-editor.cm-focused {\n                    outline: none!important;\n                }\n                .cm-editor {\n                    height: 100%;\n                }`;\n                shadowRoot.appendChild(shadowStyles);\n\n                shadowRoot.appendChild(cmElement);\n                const CodeProEditor = await requireCm6Pro();\n                const opts = {\n                    changesListener: saveAction\n                };\n                codeEditorInstance = new CodeProEditor(cmElement, opts);\n            }\n\n            if (blackboard.state) {\n                // Restore state from the another view\n                codeEditorInstance.setState(blackboard.state);\n                // Always set linewrapping regardless of the previous state\n                // codeEditorInstance.setLineWrapping(true);\n                blackboard.state = null;\n            } else {\n                const syncCaret = isSyncCaret(editor);\n                let markerNode;\n                if (syncCaret) {\n                    // Insert caret marker and retrieve html code to pass to CodeMirror\n                    markerNode = document.createElement(\"SPAN\");\n                    markerNode.innerHTML = '&nbsp;';\n                    markerNode.classList.add('CmCaReT');\n                    const currentNode = editor.selection.getStart();\n                    currentNode.append(markerNode);\n                }\n                let html = editor.getContent({source_view: true});\n                if (syncCaret) {\n                    html = html.replace(/<span\\s+class=\"CmCaReT\"([^>]*)>([^<]*)<\\/span>/gm, String.fromCharCode(0));\n                    markerNode.remove();\n                }\n\n                // According to global preference prettify code when opening the editor\n                if (isAutoFormatHTML(editor)) {\n                    html = codeEditorInstance?.prettifyCode(html);\n                }\n                codeEditorInstance?.setValue(html);\n            }\n        },\n        onHide: () => {}\n    };\n}"],"names":["editor","translations","opendialogStr","fullscreenStr","themesStr","linewrapStr","prettifyStr","codeEditorInstance","ui","registry","addIcon","saveAction","codeContent","getValue","console","log","setContent","buttons","type","text","icon","tooltip","onAction","execCommand","api","isDark","isActive","setActive","setIcon","theme","setTheme","onSetup","isWrap","setLineWrapping","prettify","buttonType","defaultUI","startsWith","unshift","state","getState","onShow","async","container","getContainer","classList","add","shadowRoot","attachShadow","mode","cmElement","document","createElement","shadowStyles","textContent","appendChild","CodeProEditor","changesListener","blackboard","setState","syncCaret","markerNode","innerHTML","selection","getStart","append","html","getContent","source_view","replace","String","fromCharCode","remove","_codeEditorInstance2","prettifyCode","setValue","onHide"],"mappings":";;;;;;;;SAkC2BA,OAAQC,oBACxBC,cAAeC,cAAeC,UAAWC,YAAaC,aAAeL,iBAUxEM,mBARJP,OAAOQ,GAAGC,SAASC,QAAQ,uBAAwB,+qBACnDV,OAAOQ,GAAGC,SAASC,QAAQ,mBAAoB,urBAC/CV,OAAOQ,GAAGC,SAASC,QAAQ,oBAAqB,wVAChDV,OAAOQ,GAAGC,SAASC,QAAQ,qBAAsB,ukBACjDV,OAAOQ,GAAGC,SAASC,QAAQ,wBAAyB,maACpDV,OAAOQ,GAAGC,SAASC,QAAQ,0BAA2B,8QACtDV,OAAOQ,GAAGC,SAASC,QAAQ,mBAAoB,+ZAIzCC,WAAa,QACXJ,mBAAoB,OACdK,YAAcL,mBAAmBM,WACvCC,QAAQC,IAAI,YACZf,OAAOgB,WAAWJ,eAKpBK,QAAU,CACZ,CACIC,KAAM,SACNC,KAAM,IACNC,KAAM,aACNC,QAASlB,cACTmB,SAAU,KACNtB,OAAOuB,YAAY,mBAG3B,CACIL,KAAM,eACNC,KAAM,IACNC,KAAM,mBACNC,QAASjB,UACTkB,SAAWE,UACFjB,gCAGCkB,OAASD,IAAIE,WACnBF,IAAIG,WAAWF,QACfD,IAAII,QAAQH,OAAS,mBAAqB,2BACpCI,MAAQJ,OAAS,QAAU,OACjClB,mBAAmBuB,SAASD,gCACpB,QAASA,OAAO,IAE5BE,QAAUP,YAGAC,OAA0B,UADX,wBAAQ,QAAS,SAEtCD,IAAIG,UAAUF,QACdD,IAAII,QAAQH,OAAS,mBAAqB,uBAIlD,CACIP,KAAM,eACNC,KAAM,IACNC,KAAM,wBACNC,QAAShB,YACTiB,SAAWE,UACFjB,gCAGCyB,OAASR,IAAIE,WACnBF,IAAIG,UAAUK,QACdR,IAAII,QAAQI,OAAS,wBAA0B,2BAC/CzB,mBAAmB0B,gBAAgBD,iCAC3B,OAAQA,OAAS,IAAI,IAEjCD,QAAUP,YAEAQ,OAAsC,UAA7B,wBAAQ,OAAQ,SAC/BR,IAAIG,UAAUK,QACdR,IAAII,QAAQI,OAAS,0BAA4B,2BAGzD,CACId,KAAM,SACNC,KAAM,IACNC,KAAM,qBACNC,QAASf,YACTgB,SAAU,yDACNf,uEAAoB2B,aAG5B,CACIhB,KAAM,SACNC,KAAM,WACNC,KAAM,uBACNe,WAAY,UACZb,SAAU,KACNX,aACAX,OAAOuB,YAAY,cAAc,EAAO,cAM9Ca,WAAY,yBAAapC,SAAW,SAClBoC,UAAUC,WAAW,UAEzCpB,QAAQqB,QAAQ,CACZpB,KAAM,SACNC,KAAM,IACNC,KAAM,mBACNC,QAASnB,cACToB,SAAU,0BACKiB,MAAQhC,mBAAmBiC,WACtCxC,OAAOuB,YAAY,cAAc,EAAO,mCAExBvB,iCACR,OAAQ,UAAU,YAK/B,CACHiB,QAAAA,QACAwB,OAAQC,MAAAA,UACCnC,mBAAoB,OACfoC,UAAYnB,IAAIoB,eACtBD,UAAUE,UAAUC,IAAI,iCAClBC,WAAaJ,UAAUK,aAAa,CAACC,KAAM,SAC3CC,UAAYC,SAASC,cAAc,OACzCF,UAAUL,UAAUC,IAAI,gCAElBO,aAAeF,SAASC,cAAc,SAC5CC,aAAaC,YAAe,kSAU5BP,WAAWQ,YAAYF,cAEvBN,WAAWQ,YAAYL,iBACjBM,oBAAsB,uBAI5BjD,mBAAqB,IAAIiD,cAAcN,UAH1B,CACTO,gBAAiB9C,gBAKrB+C,qBAAWnB,MAEXhC,mBAAmBoD,SAASD,qBAAWnB,4BAG5BA,MAAQ,SAChB,gCACGqB,WAAY,wBAAY5D,YAC1B6D,cACAD,UAAW,CAEXC,WAAaV,SAASC,cAAc,QACpCS,WAAWC,UAAY,SACvBD,WAAWhB,UAAUC,IAAI,WACL9C,OAAO+D,UAAUC,WACzBC,OAAOJ,gBAEnBK,KAAOlE,OAAOmE,WAAW,CAACC,aAAa,gCACvCR,YACAM,KAAOA,KAAKG,QAAQ,mDAAoDC,OAAOC,aAAa,IAC5FV,WAAWW,WAIX,6BAAiBxE,QACjBkE,kCAAO3D,0DAAAkE,qBAAoBC,aAAaR,mCAE5C3D,yEAAoBoE,SAAST,QAGrCU,OAAQ"}