define("tiny_codepro/viewpanel",["exports","./preferences","./options","./viewmanager"],(function(_exports,_preferences,_options,_viewmanager){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.ViewPanelManager=void 0;
/**
   * Tiny CodePro plugin.
   *
   * @module      tiny_codepro/plugin
   * @copyright   2023-2025 Josep Mulet Pol <pep.mulet@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
class ViewPanelManager extends _viewmanager.ViewManager{constructor(editor,opts){super(editor,opts),this.translations=this.opts.translations??[],this.isViewCreated=!1}_tShow(){this.editor.execCommand("ToggleView",!1,"codepro")}_tClose(){this.editor.execCommand("ToggleView",!1,"codepro")}async _tCreate(){if(this.isViewCreated)return;this.isViewCreated=!0,this.#registerIcons();const viewSpec=this.#createViewSpec();this.editor.ui.registry.addView("codepro",viewSpec)}#createUI(api){this.codeEditorElement=document.createElement("DIV");const container=api.getContainer();container.classList.add("tiny_codepro-view__pane");const shadowRoot=container.attachShadow({mode:"open"});this.codeEditorElement.classList.add("tiny_codepro-container");const shadowStyles=document.createElement("style");shadowStyles.textContent="\n        .tiny_codepro-container {\n            height: 100%;\n        }\n        .cm-editor.cm-focused {\n            border-color: #86b7fe;\n            outline: 0!important;\n            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n            border-radius: 4px;\n        }\n        .cm-editor {\n            height: 100%;\n        }",shadowRoot.appendChild(shadowStyles),shadowRoot.appendChild(this.codeEditorElement)}#setButtonsState(){const[_,__,btnDescreaseFontsize,btnIncreaseFontsize,btnTheme,btnWrap,___,btnAccept]=this.headerButtonElements;btnDescreaseFontsize.style.marginRight="0",btnIncreaseFontsize.style.marginLeft="0";const isDark="dark"===(0,_preferences.getPref)("theme","light"),isWrap=(0,_preferences.getPref)("wrap",!0);btnTheme.querySelector("span").innerHTML=isDark?_viewmanager.ViewManager.icons.moon:_viewmanager.ViewManager.icons.sun,btnWrap.querySelector("span").innerHTML=isWrap?_viewmanager.ViewManager.icons.exchange:_viewmanager.ViewManager.icons.rightarrow,isDark?this.parentContainer.classList.add("tiny_codepro-dark"):this.parentContainer.classList.remove("tiny_codepro-dark"),btnAccept.querySelector("svg").style.marginRight="5px";const isFullscreen=(0,_preferences.getPref)("fs",!1),hasClassFS=this.editor.container.classList.contains("tox-fullscreen");(hasClassFS&&!isFullscreen||!hasClassFS&&isFullscreen)&&this.editor.execCommand("mceFullScreen")}#createViewSpec(){return{buttons:this.#createButtons(),onShow:async api=>{this.codeEditorElement||this.#createUI(api);const container=api.getContainer();this.parentContainer=container.parentElement,this.headerButtonElements=this.parentContainer.querySelectorAll(".tox-view__header button"),this.#setButtonsState(),await this.attachCodeEditor(this.codeEditorElement),this.setHTMLCodeOrState()},onHide:()=>{}}}#registerIcons(){Object.keys(_viewmanager.ViewManager.icons).forEach((key=>{this.editor.ui.registry.addIcon(`tiny_codepro-${key}`,_viewmanager.ViewManager.icons[key])}))}#createButtons(){const[opendialogStr,fullscreenStr,themesStr,linewrapStr,prettifyStr,decreaseFontsizeStr,increaseFontsizeStr]=this.translations,buttons=[{type:"button",text:" ",icon:"tiny_codepro-fullscreen",tooltip:fullscreenStr,onAction:()=>{(0,_preferences.setPref)("fs",!(0,_options.isFullscreen)(this.editor),!0),this.editor.execCommand("mceFullScreen")}},{type:"button",text:"",icon:"tiny_codepro-decreasefontsize",tooltip:decreaseFontsizeStr,onAction:this.decreaseFontsize.bind(this)},{type:"button",text:"",icon:"tiny_codepro-increasefontsize",tooltip:increaseFontsizeStr,onAction:this.increaseFontsize.bind(this)},{type:"button",text:" ",icon:"tiny_codepro-sun",tooltip:themesStr,onAction:()=>{const btnTheme=this.headerButtonElements[4];this.toggleTheme(btnTheme,this.parentContainer)}},{type:"button",text:" ",icon:"tiny_codepro-exchange",tooltip:linewrapStr,onAction:()=>{const btnWrap=this.headerButtonElements[5];this.toggleLineWrapping(btnWrap)}},{type:"button",text:" ",icon:"tiny_codepro-magic",tooltip:prettifyStr,onAction:this.prettify.bind(this)},{type:"button",text:" tinyMCE",icon:"tiny_codepro-tinymce",buttonType:"primary",onAction:this.accept.bind(this)}];return((0,_options.getDefaultUI)(this.editor)??"dialog").startsWith("user:")&&buttons.unshift({type:"button",text:" ",icon:"tiny_codepro-eye",tooltip:opendialogStr,onAction:this.switchViews.bind(this)}),buttons}}_exports.ViewPanelManager=ViewPanelManager}));

//# sourceMappingURL=viewpanel.min.js.map