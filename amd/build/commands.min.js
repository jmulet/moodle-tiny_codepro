define("tiny_codepro/commands",["exports","editor_tiny/utils","core/str","./viewdialog","./common","./options","./viewpanel","./preferences"],(function(_exports,_utils,_str,_viewdialog,_common,_options,_viewpanel,_preferences){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.requireCm6Pro=_exports.getSetup=_exports.blackboard=void 0;
/**
   * Tiny CodePro plugin.
   *
   * @module      tiny_codepro/plugin
   * @copyright   2023-2025 Josep Mulet Pol <pep.mulet@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const blackboard={scrolls:{}};_exports.blackboard=blackboard;_exports.requireCm6Pro=()=>new Promise((resolve=>{require(["tiny_codepro/cm6pro-lazy"],(CodeProEditor=>{resolve(CodeProEditor)}))}));_exports.getSetup=async()=>{const[strs,buttonImage]=await Promise.all([(0,_str.get_strings)([{key:"pluginname",component:_common.component},{key:"opendialog",component:_common.component},{key:"fullscreen",component:_common.component},{key:"themes",component:_common.component},{key:"linewrap",component:_common.component},{key:"prettify",component:_common.component},{key:"decreasefontsize",component:_common.component},{key:"increasefontsize",component:_common.component}]),(0,_utils.getButtonImage)("icon",_common.component)]),[pluginName,...translations]=strs;return async editor=>{(0,_options.isPluginVisible)(editor)&&(editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.addCommand("mceCodeProEditor",(()=>{let defaultUI=(0,_options.getDefaultUI)(editor)??"dialog";defaultUI.startsWith("user:")&&(defaultUI=(0,_preferences.getPref)("view",defaultUI.substring(5))),blackboard.scrolls[editor.id]=editor.contentWindow.scrollY,"dialog"===defaultUI?(0,_viewdialog.showDialog)(editor):(console.log("Add view!!!"),editor.ui.registry.addView("codepro",(0,_viewpanel.createView)(editor,translations)),console.log("open view"),editor.execCommand("ToggleView",!1,"codepro"))})),editor.ui.registry.addButton(_common.component,{icon:_common.icon,tooltip:pluginName,onAction:()=>editor.execCommand("mceCodeProEditor",!1)}),editor.ui.registry.addMenuItem(_common.component,{icon:_common.icon,text:pluginName,onAction:()=>editor.execCommand("mceCodeProEditor",!1)}))}}}));

//# sourceMappingURL=commands.min.js.map