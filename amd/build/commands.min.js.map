{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny CodePro plugin.\n *\n * @module      tiny_codepro/plugin\n * @copyright   2023 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {handleAction} from './ui';\nimport {component, icon} from './common';\nimport {isPluginVisible} from './options';\n\nexport const getSetup = async() => {\n    const [\n        pluginName,\n        buttonImage,\n    ] = await Promise.all([\n        getString('pluginname', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        if (!isPluginVisible(editor)) {\n            return;\n        }\n        // Register the Icon.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the Toolbar Button.\n        editor.ui.registry.addButton(component, {\n            icon,\n            tooltip: pluginName,\n            onAction: () => handleAction(editor),\n            enabled: false,\n            onSetup: (api) => {\n                const cb = () => api.setEnabled(true);\n                editor.on('SetContent', cb);\n                return () => editor.off('SetContent', cb);\n            }\n        });\n\n        // Add the Menu Item.\n        // This allows it to be added to a standard menu, or a context menu.\n        editor.ui.registry.addMenuItem(component, {\n            icon,\n            text: pluginName,\n            onAction: () => handleAction(editor)\n        });\n    };\n};"],"names":["async","pluginName","buttonImage","Promise","all","component","editor","ui","registry","addIcon","icon","html","addButton","tooltip","onAction","enabled","onSetup","api","cb","setEnabled","on","off","addMenuItem","text"],"mappings":"gQA6BwBA,gBAEhBC,WACAC,mBACMC,QAAQC,IAAI,EAClB,mBAAU,aAAcC,oBACxB,yBAAe,OAAQA,4BAGnBC,UACC,4BAAgBA,UAIrBA,OAAOC,GAAGC,SAASC,QAAQC,aAAMR,YAAYS,MAG7CL,OAAOC,GAAGC,SAASI,UAAUP,kBAAW,CACpCK,KAAAA,aACAG,QAASZ,WACTa,SAAU,KAAM,oBAAaR,QAC7BS,SAAS,EACTC,QAAUC,YACAC,GAAK,IAAMD,IAAIE,YAAW,UAChCb,OAAOc,GAAG,aAAcF,IACjB,IAAMZ,OAAOe,IAAI,aAAcH,OAM9CZ,OAAOC,GAAGC,SAASc,YAAYjB,kBAAW,CACtCK,KAAAA,aACAa,KAAMtB,WACNa,SAAU,KAAM,oBAAaR"}