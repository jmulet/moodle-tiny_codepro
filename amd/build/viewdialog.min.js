define("tiny_codepro/viewdialog",["exports","./modal","core/modal_events","./preferences","./options","./viewmanager"],(function(_exports,_modal,_modal_events,_preferences,_options,_viewmanager){var obj;
/**
   * Tiny CodePro plugin.
   *
   * @module      tiny_codepro/plugin
   * @copyright   2023-2025 Josep Mulet Pol <pep.mulet@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.ViewDialogManager=void 0,_modal_events=(obj=_modal_events)&&obj.__esModule?obj:{default:obj};const dialogQuery='[role="document"], [data-region="modal"]';class ViewDialogManager extends _viewmanager.ViewManager{constructor(editor,opts){super(editor,opts)}async _tShow(){this.modal.show(),this._showSpinner(this.modal.body[0]),await this.attachCodeEditor(this.modal.body[0]),this._hideSpinner(this.modal.body[0]),this.codeEditor.config.lineWrapping||(this.domElements.btnWrap.querySelector("span").innerHTML=_viewmanager.ViewManager.icons.rightarrow),"dark"===this.codeEditor.config.themeName&&(this.domElements.btnTheme.querySelector("span").innerHTML=_viewmanager.ViewManager.icons.moon)}async _tCreate(){const canuserswitchui=((0,_options.getDefaultUI)(this.editor)??"dialog").startsWith("user:"),data={elementid:Math.random().toString(32).substring(2),canuserswitchui:canuserswitchui,icons:_viewmanager.ViewManager.icons},modal=await(0,_modal.createModal)({templateContext:data});this.modal=modal,this.codeEditorElement=modal.body[0],modal.getRoot().find(".modal-dialog.modal-lg").addClass("tiny_codepro-dlg"),modal.getRoot().off("keydown"),modal.getRoot().on(_modal_events.default.outsideClick,(evt=>{evt.preventDefault()})),modal.body.css({display:"flex",height:"calc(90vh - 200px)","flex-grow":"1",overflow:"hidden"}),modal.header.css({height:"61.46px",padding:"1rem 1rem"});const modalContent=this.modal.getRoot().find(".modal-content");if("dark"===(0,_preferences.getPref)("theme")?modalContent.addClass("tiny_codepro-dark"):modalContent.removeClass("tiny_codepro-dark"),this._bindActions(),(0,_preferences.getPref)("fs")){this.modal.header.hide();const $dlgElem=this.modal.getRoot().find(dialogQuery);$dlgElem.removeClass("modal-dialog modal-lg modal-dialog-scrollable"),$dlgElem.addClass("tiny_codepro-fullscreen")}}_bindActions(){const modalContent=this.modal.getRoot().find(".modal-content")[0];this.domElements={root:modalContent,btnTheme:this.modal.footer.find("button.btn[data-action='theme']")[0],btnWrap:this.modal.footer.find("button.btn[data-action='wrap']")[0]},this.modal.footer.find("button.btn[data-action]").on("click",(evt=>{switch(evt.currentTarget.dataset.action){case"view":this.switchViews();break;case"fs":this._toggleFullscreen();break;case"font-":this.decreaseFontsize();break;case"font+":this.increaseFontsize();break;case"theme":this.toggleTheme();break;case"wrap":this.toggleLineWrapping();break;case"prettify":this.prettify();break;case"cancel":this.close();break;case"save":this.accept()}}))}_toggleFullscreen(){const $dlgElem=this.modal.getRoot().find(dialogQuery),isFullscreen=(0,_preferences.getPref)("fs",!1);isFullscreen?(this.modal.header.show(),$dlgElem.removeClass("tiny_codepro-fullscreen"),$dlgElem.addClass("modal-dialog modal-lg modal-dialog-scrollable")):(this.modal.header.hide(),$dlgElem.removeClass("modal-dialog modal-lg modal-dialog-scrollable"),$dlgElem.addClass("tiny_codepro-fullscreen")),(0,_preferences.setPref)("fs",!isFullscreen)}_unbindActions(){this.modal.footer.find("button.btn[data-action]").off("click")}_tClose(){this._unbindActions(),this.modal.destroy()}}_exports.ViewDialogManager=ViewDialogManager}));

//# sourceMappingURL=viewdialog.min.js.map