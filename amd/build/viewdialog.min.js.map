{"version":3,"file":"viewdialog.min.js","sources":["../src/viewdialog.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {createModal} from \"./modal\";\nimport ModalEvents from 'core/modal_events';\nimport {getPref, setPref} from \"./preferences\";\nimport {getDefaultUI} from \"./options\";\nimport {ViewManager} from \"./viewmanager\";\n\n/**\n * Tiny CodePro plugin.\n *\n * @module      tiny_codepro/plugin\n * @copyright   2023-2025 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nconst dialogQuery = '[role=\"document\"], [data-region=\"modal\"]';\n\nexport class ViewDialogManager extends ViewManager {\n    constructor(editor, opts) {\n        super(editor, opts);\n    }\n    async _tShow() {\n        // Make the modal visible\n        this.modal.show();\n        this._showSpinner(this.modal.body[0]);\n        // Add the codeEditor (CodeMirror) in the selected UI element\n        await this.attachCodeEditor(this.codeEditorElement);\n        this._hideSpinner(this.modal.body[0]);\n    }\n\n    async _tCreate() {\n        const defaultUI = getDefaultUI(this.editor) ?? 'dialog';\n        const canuserswitchui = defaultUI.startsWith('user:');\n\n        const data = {\n            elementid: Math.random().toString(32).substring(2),\n            canuserswitchui,\n            icons: ViewManager.icons\n        };\n\n        // Show modal with buttons.\n        const modal = await createModal({\n            templateContext: data,\n        });\n        this.modal = modal;\n\n        this.codeEditorElement = modal.body.find('.tiny_codepro-editor-area')[0];\n\n        modal.getRoot().find(\".modal-dialog.modal-lg\").addClass(\"tiny_codepro-dlg\");\n        // Disable keyboard events (ESC key) on this modal\n        modal.getRoot().off('keydown');\n        // Prevent modal from closing on outside clicks\n        modal.getRoot().on(ModalEvents.outsideClick, (evt) => {\n            evt.preventDefault();\n        });\n        modal.body.css({\n            'overflow': 'hidden',\n            'position': 'relative',\n            'min-height': '200px',\n        });\n        // Override styles imposed by body.tox-fullscreen on modals\n        modal.header.css({\n            'height': '61.46px',\n            'padding': '1rem 1rem'\n        });\n\n        const modalContent = this.modal.getRoot().find('.modal-content');\n        const isDark = getPref('theme') === 'dark';\n        if (isDark) {\n            modalContent.addClass('tiny_codepro-dark');\n        } else {\n            modalContent.removeClass('tiny_codepro-dark');\n        }\n\n        this.#bindActions();\n\n        if (getPref('fs')) {\n           // Set fullscreen mode\n           this.modal.header.hide();\n           const $dlgElem = this.modal.getRoot().find(dialogQuery);\n           $dlgElem.removeClass(\"modal-dialog modal-lg modal-dialog-scrollable\");\n           $dlgElem.addClass(\"tiny_codepro-fullscreen\");\n        }\n    }\n\n    #bindActions() {\n        const modalContent = this.modal.getRoot().find('.modal-content')[0];\n        // Setting references to Dom elements\n        this.domElements = {\n            root: modalContent,\n            btnTheme: this.modal.footer.find(\"button.btn[data-action='theme']\")[0],\n            btnWrap: this.modal.footer.find(\"button.btn[data-action='wrap']\")[0],\n        };\n\n        this.modal.footer.find(\"button.btn[data-action]\").on(\"click\", (evt) => {\n            const btnElem = evt.currentTarget;\n            const actionName = btnElem.dataset.action;\n            switch (actionName) {\n                case (\"view\"):\n                    this.switchViews();\n                    break;\n                case (\"fs\"):\n                    this.#toggleFullscreen();\n                    break;\n                case (\"font-\"):\n                    this.decreaseFontsize();\n                    break;\n                case (\"font+\"):\n                    this.increaseFontsize();\n                    break;\n                case (\"theme\"):\n                    this.toggleTheme();\n                    break;\n                case (\"wrap\"):\n                    this.toggleLineWrapping();\n                    break;\n                case (\"prettify\"):\n                    this.prettify();\n                    break;\n                case (\"cancel\"):\n                    this.close();\n                    break;\n                case (\"save\"):\n                    this.accept();\n                    break;\n            }\n        });\n    }\n\n    #toggleFullscreen() {\n        const $dlgElem = this.modal.getRoot().find(dialogQuery);\n        const isFullscreen = getPref(\"fs\", false);\n        if (!isFullscreen) {\n            // Set fullscreen mode\n            this.modal.header.hide();\n            $dlgElem.removeClass(\"modal-dialog modal-lg modal-dialog-scrollable\");\n            $dlgElem.addClass(\"tiny_codepro-fullscreen\");\n        } else {\n            // Set to modal-lg\n            this.modal.header.show();\n            $dlgElem.removeClass(\"tiny_codepro-fullscreen\");\n            $dlgElem.addClass(\"modal-dialog modal-lg modal-dialog-scrollable\");\n        }\n        setPref(\"fs\", !isFullscreen);\n    }\n\n    #unbindActions() {\n        this.modal.footer.find(\"button.btn[data-action]\").off(\"click\");\n    }\n\n    _tClose() {\n        this.#unbindActions();\n        this.modal.destroy();\n    }\n}\n"],"names":["dialogQuery","ViewDialogManager","ViewManager","constructor","editor","opts","modal","show","_showSpinner","this","body","attachCodeEditor","codeEditorElement","_hideSpinner","canuserswitchui","startsWith","data","elementid","Math","random","toString","substring","icons","templateContext","find","getRoot","addClass","off","on","ModalEvents","outsideClick","evt","preventDefault","css","header","modalContent","removeClass","bindActions","hide","$dlgElem","domElements","root","btnTheme","footer","btnWrap","currentTarget","dataset","action","switchViews","toggleFullscreen","decreaseFontsize","increaseFontsize","toggleTheme","toggleLineWrapping","prettify","close","accept","isFullscreen","_tClose","unbindActions","destroy"],"mappings":";;;;;;;yKA4BMA,YAAc,iDAEPC,0BAA0BC,yBACnCC,YAAYC,OAAQC,YACVD,OAAQC,0BAITC,MAAMC,YACNC,aAAaC,KAAKH,MAAMI,KAAK,UAE5BD,KAAKE,iBAAiBF,KAAKG,wBAC5BC,aAAaJ,KAAKH,MAAMI,KAAK,2BAK5BI,kBADY,yBAAaL,KAAKL,SAAW,UACbW,WAAW,SAEvCC,KAAO,CACTC,UAAWC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAChDP,gBAAAA,gBACAQ,MAAOpB,yBAAYoB,OAIjBhB,YAAc,sBAAY,CAC5BiB,gBAAiBP,YAEhBV,MAAQA,WAERM,kBAAoBN,MAAMI,KAAKc,KAAK,6BAA6B,GAEtElB,MAAMmB,UAAUD,KAAK,0BAA0BE,SAAS,oBAExDpB,MAAMmB,UAAUE,IAAI,WAEpBrB,MAAMmB,UAAUG,GAAGC,sBAAYC,cAAeC,MAC1CA,IAAIC,oBAER1B,MAAMI,KAAKuB,IAAI,UACC,kBACA,wBACE,UAGlB3B,MAAM4B,OAAOD,IAAI,QACH,kBACC,oBAGTE,aAAe1B,KAAKH,MAAMmB,UAAUD,KAAK,qBACX,UAArB,wBAAQ,SAEnBW,aAAaT,SAAS,qBAEtBS,aAAaC,YAAY,2BAGxBC,eAED,wBAAQ,MAAO,MAEX/B,MAAM4B,OAAOI,aACZC,SAAW9B,KAAKH,MAAMmB,UAAUD,KAAKxB,aAC3CuC,SAASH,YAAY,iDACrBG,SAASb,SAAS,iDAKfS,aAAe1B,KAAKH,MAAMmB,UAAUD,KAAK,kBAAkB,QAE5DgB,YAAc,CACfC,KAAMN,aACNO,SAAUjC,KAAKH,MAAMqC,OAAOnB,KAAK,mCAAmC,GACpEoB,QAASnC,KAAKH,MAAMqC,OAAOnB,KAAK,kCAAkC,SAGjElB,MAAMqC,OAAOnB,KAAK,2BAA2BI,GAAG,SAAUG,aAC3CA,IAAIc,cACOC,QAAQC,YAEzB,YACGC,wBAEH,WACGC,6BAEH,aACGC,6BAEH,aACGC,6BAEH,aACGC,wBAEH,YACGC,+BAEH,gBACGC,qBAEH,cACGC,kBAEH,YACGC,uCAOXjB,SAAW9B,KAAKH,MAAMmB,UAAUD,KAAKxB,aACrCyD,cAAe,wBAAQ,MAAM,GAC9BA,mBAOInD,MAAM4B,OAAO3B,OAClBgC,SAASH,YAAY,2BACrBG,SAASb,SAAS,wDAPbpB,MAAM4B,OAAOI,OAClBC,SAASH,YAAY,iDACrBG,SAASb,SAAS,qDAOd,MAAO+B,oCAIVnD,MAAMqC,OAAOnB,KAAK,2BAA2BG,IAAI,SAG1D+B,gBACSC,qBACArD,MAAMsD"}