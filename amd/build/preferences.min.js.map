{"version":3,"file":"preferences.min.js","sources":["../src/preferences.js"],"sourcesContent":["const preferences = {\n    theme: \"light\", /** Light vs dark themes */\n    wrap: \"true\", /** Wrap long lines */\n    fs: \"false\", /** Fullscreen mode */\n    view: \"\", /** Apply htmlfy when editor opens */\n};\n\n/**\n * @param {string} key The preference key\n * @param {*} [def] The default value (optional)\n * @returns the preference value\n */\nconst getPref = (key, def) => {\n    const stored = localStorage.getItem(\"tiny-codepro\");\n    if (stored) {\n        let storedParsed = {};\n        try {\n            storedParsed = JSON.parse(stored);\n        } catch (ex) {\n            // eslint-disable-next-line no-console\n            console.error(\"Cannot parse JSON\", stored);\n        }\n        Object.assign(preferences, storedParsed);\n    }\n    return preferences[key] ?? def;\n};\n\n/**\n * Saves the preferences\n */\nconst savePrefs = () => {\n    localStorage.setItem(\"tiny-codepro\", JSON.stringify(preferences));\n};\n\n/**\n * @param {*} key The preference key\n * @param {*} value The preference value\n * @param {*} save Whether to save the preference or not (optional)\n */\nconst setPref = (key, value, save) => {\n    preferences[key] = value;\n    if (save) {\n        savePrefs();\n    }\n};\n\nexport {getPref, setPref, savePrefs};\n"],"names":["preferences","theme","wrap","fs","view","key","def","stored","localStorage","getItem","storedParsed","JSON","parse","ex","console","error","Object","assign","savePrefs","setItem","stringify","value","save"],"mappings":"4LAAMA,YAAc,CAChBC,MAAO,QACPC,KAAM,OACNC,GAAI,QACJC,KAAM,qBAQM,CAACC,IAAKC,aACZC,OAASC,aAAaC,QAAQ,mBAChCF,OAAQ,KACJG,aAAe,OAEfA,aAAeC,KAAKC,MAAML,QAC5B,MAAOM,IAELC,QAAQC,MAAM,oBAAqBR,QAEvCS,OAAOC,OAAOjB,YAAaU,qBAExBV,YAAYK,MAAQC,WAMzBY,UAAY,KACdV,aAAaW,QAAQ,eAAgBR,KAAKS,UAAUpB,6DAQxC,CAACK,IAAKgB,MAAOC,QACzBtB,YAAYK,KAAOgB,MACfC,MACAJ"}