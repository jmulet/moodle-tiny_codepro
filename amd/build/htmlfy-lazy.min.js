define("tiny_codepro/htmlfy-lazy",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0;const CONFIG={content_wrap:0,ignore:[],ignore_with:"_!i-£___£%_",strict:!1,tab_size:2,tag_wrap:0,tag_wrap_width:80,trim:[]},VOID_ELEMENTS=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"],isHtml=content=>/<(?:[A-Za-z]+[A-Za-z0-9]*)(?:\s+.*?)*?\/{0,1}>/.test(content)||/<(?<Element>(?:[A-Za-z]+[A-Za-z0-9]*:)?(?:[A-Za-z]+[A-Za-z0-9]*))(?:\s+.*?)*?>(?:.|\n)*?<\/{1}\k<Element>>/.test(content)||/<(?<Element>(?:[a-z][a-z0-9._]*:)?[a-z][a-z0-9._]*-[a-z0-9._-]+)(?:\s+.*?)*?>(?:.|\n)*?<\/{1}\k<Element>>/.test(content),mergeObjects=(current,updates)=>{if(!current||!updates)throw new Error("Both 'current' and 'updates' must be passed-in to mergeObjects()");let merged;if(Array.isArray(current))merged=structuredClone(current).concat(updates);else if("object"==typeof current){merged={...current};for(let key of Object.keys(updates))"object"!=typeof updates[key]?merged[key]=updates[key]:merged[key]=mergeObjects(merged[key]||{},updates[key])}return merged},escapedIgnoreString="!i-£___£%_".replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"),ltPlaceholderRegex=new RegExp(escapedIgnoreString+"lt!","g"),gtPlaceholderRegex=new RegExp(escapedIgnoreString+"gt!","g"),validateConfig=config=>{var _config$ignore,_config$trim;if("object"!=typeof config)throw new Error("Config must be an object.");if(!(Object.hasOwn(config,"content_wrap")||Object.hasOwn(config,"ignore")||Object.hasOwn(config,"ignore_with")||Object.hasOwn(config,"strict")||Object.hasOwn(config,"tab_size")||Object.hasOwn(config,"tag_wrap")||Object.hasOwn(config,"tag_wrap_width")||Object.hasOwn(config,"trim")))return CONFIG;let tab_size=config.tab_size;if(tab_size){if("number"!=typeof tab_size)throw new Error(`tab_size must be a number, not ${typeof config.tab_size}.`);if(!Number.isSafeInteger(tab_size))throw new Error(`Tab size ${tab_size} is not safe. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger for more info.`);if(tab_size=Math.floor(tab_size),tab_size<1||tab_size>16)throw new Error("Tab size out of range. Expecting 1 to 16.");config.tab_size=tab_size}if(Object.hasOwn(config,"content_wrap")&&"number"!=typeof config.content_wrap)throw new Error(`content_wrap config must be a number, not ${typeof config.tag_wrap_width}.`);if(Object.hasOwn(config,"ignore")&&(!Array.isArray(config.ignore)||null===(_config$ignore=config.ignore)||void 0===_config$ignore||!_config$ignore.every((e=>"string"==typeof e))))throw new Error("Ignore config must be an array of strings.");if(Object.hasOwn(config,"ignore_with")&&"string"!=typeof config.ignore_with)throw new Error(`Ignore_with config must be a string, not ${typeof config.ignore_with}.`);if(Object.hasOwn(config,"strict")&&"boolean"!=typeof config.strict)throw new Error(`Strict config must be a boolean, not ${typeof config.strict}.`);if(Object.hasOwn(config,"tag_wrap")&&"boolean"==typeof config.tag_wrap&&(console.warn("tag_wrap as a boolean is deprecated, and will not be supported in v0.9.0+. Use `tag_wrap: <number>` instead; where <number> is the max character width acceptable before wrapping attributes."),config.tag_wrap_width?config.tag_wrap=config.tag_wrap_width:config.tag_wrap=CONFIG.tag_wrap_width),Object.hasOwn(config,"tag_wrap")&&"number"!=typeof config.tag_wrap)throw new Error(`tag_wrap config must be a number, not ${typeof config.tag_wrap}.`);if(Object.hasOwn(config,"tag_wrap_width")&&console.warn("tag_wrap_width is deprecated, and will not be supported in v0.9.0+. Use `tag_wrap: <number>` instead; where <number> is the max character width acceptable before wrapping attributes."),Object.hasOwn(config,"tag_wrap_width")&&"number"!=typeof config.tag_wrap_width)throw new Error(`tag_wrap_width config must be a number, not ${typeof config.tag_wrap_width}.`);if(Object.hasOwn(config,"trim")&&(!Array.isArray(config.trim)||null===(_config$trim=config.trim)||void 0===_config$trim||!_config$trim.every((e=>"string"==typeof e))))throw new Error("Trim config must be an array of strings.");return((dconfig,config)=>mergeObjects(structuredClone(dconfig),config))(CONFIG,config)};const entify=function(html){let minify=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return html=html.replace(/<textarea[^>]*>((.|\n)*?)<\/textarea>/g,((match,capture)=>match.replace(capture,(match=>match.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;").replace(/\n/g,"&#10;").replace(/\r/g,"&#13;").replace(/\s/g,"&nbsp;"))))),minify&&(html=html.replace(/<textarea[^>]*>((.|\n)*?)<\/textarea>/g,((match,capture)=>match=(match=match.replace(capture,(match=>match.replace(/\n|\t/g,"").replace(/[a-z]+="\s*"/gi,"").replace(/>\s+</g,"><").replace(/\s+/g," ")))).replace(/\s+/g," ").replace(/\s>/g,">").replace(/>\s/g,">").replace(/\s</g,"<").replace(/class=["']\s/g,(match=>match.replace(/\s/g,""))).replace(/(class=.*)\s(["'])/g,"$1$2")))),html};let strict,trim;const convert={line:[]};let ignore_map;const preprocess=html=>(html=function(html){return arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||isHtml(html)?html.replace(/<([a-zA-Z\-0-9:]+)[^>]*>/g,((match,name)=>VOID_ELEMENTS.indexOf(name)>-1?`${match.substring(0,match.length-1)} />`.replace(/\/\s\//g,"/"):match.replace(/[\s]?\/>/g,`></${name}>`))):html}(html,!1),trim.length>0&&(html=((html,trim)=>{for(let e=0;e<trim.length;e++){const leading_whitespace=new RegExp(`(<${trim[e]}[^>]*>)\\s+`,"g"),trailing_whitespace=new RegExp(`\\s+(</${trim[e]}>)`,"g");html=html.replace(leading_whitespace,"$1").replace(trailing_whitespace,"$1")}return html})(html,trim)),html=function(html){return arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||isHtml(html)?html=(html=(html=(html=(html=(html=(html=(html=(html=(html=(html=entify(html)).replace(/\n|\t/g,"")).replace(/>\s+</g,"><")).replace(/ {2,}/g," ")).replace(/ >/g,">")).replace(/ </g,"<")).replace(/> /g,">")).replace(/<\s*\//g,"</")).replace(/ = /g,"=")).replace(/([a-zA-Z0-9_-]+)=(['"])(.*?)\2/g,((match,attr_name,quote,value)=>`${attr_name}=${quote}${value.trim()}${quote}`))).trim():html}(html,!1),html=(html=>{convert.line=[];let i=-1;return html.replace(/(<[^>]+>)|([^<]+)/g,((match,c1,c2)=>(c1?convert.line.push({type:"tag",value:match}):c2&&c2.trim().length>0&&convert.line.push({type:"text",value:match}),i++,`\n[#-# : ${i} : ${match} : #-#]\n`)))})(html)),process=(html,config)=>{const step=" ".repeat(config.tab_size),tag_wrap=config.tag_wrap,content_wrap=config.content_wrap,placeholder_template=`-${config.ignore_with}`;let indents="";const output_lines=[],tag_regex=/<[A-Za-z]+\b[^>]*(?:.|\n)*?\/?>/g,attribute_regex=/\s{1}[A-Za-z-]+(?:=".*?")?/g;convert.line.forEach(((source,index)=>{let current_line_value=source.value;const is_ignored_content=current_line_value.startsWith(placeholder_template+"lt--")||current_line_value.startsWith(placeholder_template+"gt--")||current_line_value.startsWith(placeholder_template+"nl--")||current_line_value.startsWith(placeholder_template+"cr--")||current_line_value.startsWith(placeholder_template+"ws--")||current_line_value.startsWith(placeholder_template+"tab--");let subtrahend=0;const prev_line_data=convert.line[index-1],prev_line_value=(null==prev_line_data?void 0:prev_line_data.value)??"";indents+="0",0===index&&subtrahend++,current_line_value.trim().startsWith("</")&&subtrahend++,prev_line_value.trim().startsWith("<!doctype")&&subtrahend++,prev_line_value.trim().startsWith("\x3c!--")&&subtrahend++,prev_line_value.trim().endsWith("/>")&&subtrahend++,prev_line_value.trim().startsWith("</")&&subtrahend++,"text"===(null==prev_line_data?void 0:prev_line_data.type)&&subtrahend++;const current_indent_level=Math.max(0,indents.length-subtrahend);if(indents=indents.substring(0,current_indent_level),"text"===source.type&&/^[!,;\.]/.test(current_line_value)){if(1===current_line_value.length)return void(output_lines[output_lines.length-1]=output_lines.at(-1)+current_line_value);output_lines[output_lines.length-1]=output_lines.at(-1)+current_line_value.charAt(0),current_line_value=current_line_value.slice(1).trim()}const padding=step.repeat(current_indent_level);if(is_ignored_content)output_lines.push(current_line_value);else{if(strict&&current_line_value.trim().startsWith("\x3c!--"))return;let result=current_line_value;if("text"===source.type&&content_wrap>0&&result.length>=content_wrap)result=((text,width,indent)=>{const words=text.trim().split(/\s+/);if(0===words.length||1===words.length&&""===words[0])return"";const lines=[];let current_line="";const padding_string=indent;words.forEach((word=>{if(""===word)return;if(word.length>=width)return""!==current_line&&lines.push(0===lines.length?indent+current_line:padding_string+current_line),lines.push(0===lines.length?indent+word:padding_string+word),void(current_line="");const test_line=""===current_line?word:current_line+" "+word;test_line.length<=width?current_line=test_line:(""!==current_line&&lines.push(0===lines.length?indent+current_line:padding_string+current_line),current_line=word)})),""!==current_line&&lines.push(0===lines.length?indent+current_line:padding_string+current_line);return lines.join("\n").replace(/\n/g,"__!i-£___£%__nl!").replace(/\r/g,"__!i-£___£%__cr!").replace(/\s/g,"__!i-£___£%__ws!")})(result,content_wrap,padding);else if(tag_wrap>0&&result.length>tag_wrap&&tag_regex.test(result)){tag_regex.lastIndex=0,attribute_regex.lastIndex=0;const tag_parts=result.split(attribute_regex).filter(Boolean);if(tag_parts.length>=2){const attributes=result.matchAll(attribute_regex),inner_padding=padding+step;let wrapped_tag=padding+tag_parts[0]+"\n";for(const a of attributes){wrapped_tag+=inner_padding+a[0].trim()+"\n"}const tag_name_match=tag_parts[0].match(/<([A-Za-z_:-]+)/),tag_name=tag_name_match?tag_name_match[1]:"",is_void=VOID_ELEMENTS.includes(tag_name),closing_part=tag_parts[1].trim();wrapped_tag+=padding+(strict&&is_void?" ":"")+closing_part,result=wrapped_tag}else result=padding+result}else result=padding+result;output_lines.push(result)}}));let final_html=output_lines.join("\n");return tag_wrap>0&&(final_html=(html=>html.replace(/<[\w:\-]+([^>]*[^\/])>/g,((match,capture)=>match.replace(capture,(match=>match.replace(/\n/g,"!i-£___£%_nl!").replace(/\r/g,"!i-£___£%_cr!").replace(/\s/g,"!i-£___£%_ws!"))))))(final_html)),content_wrap>0&&/\n[ ]*[^\n]*__!i-£___£%__[^\n]*\n/.test(final_html)&&(final_html=(html=>html.replace(/\s*<([a-zA-Z0-9:-]+)[^>]*>\n\s*<\/\1>(?=\n[ ]*[^\n]*__!i-£___£%__[^\n]*\n)(\n[ ]*\S[^\n]*\n)|<([a-zA-Z0-9:-]+)[^>]*>(?=\n[ ]*[^\n]*__!i-£___£%__[^\n]*\n)(\n[ ]*\S[^\n]*\n\s*)<\/\3>/g,((match,p1,p2,p3,p4)=>{const text_to_protect=p2||p4;if(!text_to_protect)return match;const protected_text=text_to_protect.replace(/\n/g,"__!i-£___£%__nl!").replace(/\r/g,"__!i-£___£%__cr!").replace(/\s/g,"__!i-£___£%__ws!");return match.replace(text_to_protect,protected_text)})))(final_html)),final_html=final_html.replace(/<(?<Element>.+).*>[^<]*?[^><\/\s][^<]*?<\/{1}\k<Element>|<script[^>]*>\s+<\/script>|<(\w+)>\s+<\/(\w+)|<(?:([\w:\._-]+)|([\w:\._-]+)[^>]*[^\/])>\s+<\/([\w:\._-]+)>/g,(match=>match.replace(/\n|\t|\s{2,}/g,""))),content_wrap>0&&(final_html=(html=>html.replace(/.*__!i-£___£%__[a-z]{2}!.*/g,(match=>match.replace(/__!i-£___£%__[a-z]{2}!/g,(match=>match.replace(new RegExp("__!i-£___£%__nl!","g"),"\n").replace(new RegExp("__!i-£___£%__cr!","g"),"\r").replace(new RegExp("__!i-£___£%__ws!","g")," "))))))(final_html)),tag_wrap>0&&(final_html=(html=>html.replace(/<[\w:\-]+([^>]*[^\/])>/g,((match,capture)=>match.replace(capture,(match=>match.replace(new RegExp("!i-£___£%_nl!","g"),"\n").replace(new RegExp("!i-£___£%_cr!","g"),"\r").replace(new RegExp("!i-£___£%_ws!","g")," "))))))(final_html)),strict&&(final_html=final_html.replace(/\s\/>|\/>/g,">")),final_html.startsWith("\n")&&(final_html=final_html.substring(1)),final_html.endsWith("\n")&&(final_html=final_html.substring(0,final_html.length-1)),final_html};return _exports.default=(html,config)=>{if(!isHtml(html))return html;const validated_config=config?validateConfig(config):CONFIG;strict=validated_config.strict;const ignore=validated_config.ignore.length>0;if(trim=validated_config.trim,ignore){const{html_with_markers:html_with_markers,extracted_map:extracted_map}=function(html,config){let current_html=html;const extracted_blocks=new Map;let marker_id=0;for(const tag of config.ignore){const safe_tag_name=tag.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"),regex=new RegExp(`<${safe_tag_name}[^>]*>.*?</${safe_tag_name}>`,"gs");let match;const replacements=[];for(;null!==(match=regex.exec(current_html));){const marker=`___HTMLFY_SPECIAL_IGNORE_MARKER_${marker_id++}___`;extracted_blocks.set(marker,match[0]),replacements.push({start:match.index,end:regex.lastIndex,marker:marker})}for(let i=replacements.length-1;i>=0;i--){const rep=replacements[i];current_html=current_html.substring(0,rep.start)+rep.marker+current_html.substring(rep.end)}}return{html_with_markers:current_html,extracted_map:extracted_blocks}}(html,validated_config);html=html_with_markers,ignore_map=extracted_map}return html=(html=>html.replace(/<([A-Za-z][A-Za-z0-9]*|[a-z][a-z0-9._]*-[a-z0-9._-]+)((?:\s+[A-Za-z0-9_-]+="[^"]*"|\s*[a-z]*)*)>/g,((match,p1,p2)=>match.replace(p2,(match=>match.replace(/</g,"!i-£___£%_lt!").replace(/>/g,"!i-£___£%_gt!"))))))(html),html=preprocess(html),html=(html=>html.replace(/<([\w:\-]+)([^>]*)>/g,((fullMatch,tagName,attributesCapture)=>`<${tagName}${attributesCapture.replace(ltPlaceholderRegex,"<").replace(gtPlaceholderRegex,">")}>`)))(html=process(0,validated_config)),ignore&&(html=function(html_with_markers,extracted_map){let final_html=html_with_markers;for(const[marker,original_block]of extracted_map)final_html=final_html.split(marker).join(original_block);return final_html}(html,ignore_map)),html},_exports.default}));

//# sourceMappingURL=htmlfy-lazy.min.js.map